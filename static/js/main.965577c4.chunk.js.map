{"version":3,"sources":["components/ListItem.jsx","components/List.jsx","components/ListSection.jsx","components/TimeSection.jsx","App.js","reportWebVitals.js","index.js"],"names":["ListItem","item","className","value","time","List","list","TransitionGroup","component","map","CSSTransition","timeout","classNames","id","ListSection","getTime","useState","setList","textRef","useRef","ref","placeholder","type","onClick","current","hours","minutes","seconds","newMassage","Date","now","clickHandler","in","length","unmountOnExit","TimeSection","setTime","useEffect","setTimeout","App","date","getHours","getMinutes","getSeconds","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAWeA,EATE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,qBAAIC,UAAU,aAAd,UACE,sBAAMA,UAAU,sBAAhB,SAAuCD,EAAKE,QAC5C,sBAAMD,UAAU,mBAAhB,SAAoCD,EAAKG,WCUhCC,EAZF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,KAAKN,UAAU,OAA1C,SACGI,EAAKG,KAAI,SAACR,GAAD,OACR,cAACS,EAAA,EAAD,CAA6BC,QAAS,IAAKC,WAAW,aAAtD,SACE,cAAC,EAAD,CAAUX,KAAMA,KADEA,EAAKY,UC8ClBC,EAlDK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,EAAwBC,mBAAS,IAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACMC,EAAUC,iBAAO,MAiBvB,OACE,0BAASjB,UAAU,uBAAnB,UACE,uBAAMA,UAAU,OAAhB,UACE,0BACEkB,IAAKF,EACLhB,UAAU,cACVmB,YAAY,uBAEd,wBACEnB,UAAU,YACVoB,KAAK,SACLC,QAAS,kBA1BI,WACnB,GAAKL,EAAQM,QAAQrB,MAArB,CAEA,MAAoCY,IAA5BU,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,QAElBC,EAAa,CACjBf,GAAIgB,KAAKC,MACT3B,MAAOe,EAAQM,QAAQrB,MACvBC,KAAK,GAAD,OAAKqB,EAAL,cAAgBC,EAAhB,cAA6BC,IAInC,OADAT,EAAQM,QAAQrB,MAAQ,GACjBc,GAAQ,SAACX,GAAD,4BAAcA,GAAd,CAAoBsB,QAcdG,IAHjB,qBASF,cAAC,EAAD,CAAMzB,KAAMA,IAEZ,cAACI,EAAA,EAAD,CACEsB,IAAK1B,EAAK2B,OACVtB,QAAS,IACTC,WAAW,cACXsB,eAAa,EAJf,SAME,mBAAGhC,UAAU,cAAb,yBC9BOiC,EAhBK,SAAC,GAAiB,IAAfpB,EAAc,EAAdA,QACrB,EAAwBC,mBAASD,KAAjC,mBAAOX,EAAP,KAAagC,EAAb,KAQA,OANAC,qBAAU,WACRC,YAAW,WACT,OAAOF,EAAQrB,KACd,OACF,CAACX,EAAMW,IAGR,yBAASb,UAAU,uBAAnB,SACE,sBAAMA,UAAU,qBAAhB,mBAAyCE,EAAKqB,MAA9C,cAAyDrB,EAAKsB,QAA9D,cAA2EtB,EAAKuB,cCWvEY,EArBH,WACV,IAAMxB,EAAU,WACd,IAAMyB,EAAO,IAAIX,KASjB,MAAO,CAAEJ,MANPe,EAAKC,WAAa,GAAK,IAAMD,EAAKC,WAAaD,EAAKC,WAMtCf,QAJdc,EAAKE,aAAe,GAAK,IAAMF,EAAKE,aAAeF,EAAKE,aAIjCf,QAFvBa,EAAKG,aAAe,GAAK,IAAMH,EAAKG,aAAeH,EAAKG,eAI5D,OACE,qCACE,cAAC,EAAD,CAAa5B,QAASA,IACtB,cAAC,EAAD,CAAaA,QAASA,QCPb6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.965577c4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ListItem = ({ item }) => {\r\n  return (\r\n    <li className=\"list__item\">\r\n      <span className=\"list__item__massage\">{item.value}</span>\r\n      <span className=\"list__item__time\">{item.time}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nconst List = ({ list }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"list\">\r\n      {list.map((item) => (\r\n        <CSSTransition key={item.id} timeout={500} classNames=\"list__item\">\r\n          <ListItem item={item} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport List from \"./List\";\r\n\r\nconst ListSection = ({ getTime }) => {\r\n  const [list, setList] = useState([]);\r\n  const textRef = useRef(null);\r\n\r\n  const clickHandler = () => {\r\n    if (!textRef.current.value) return;\r\n\r\n    const { hours, minutes, seconds } = getTime();\r\n\r\n    const newMassage = {\r\n      id: Date.now(),\r\n      value: textRef.current.value,\r\n      time: `${hours} : ${minutes} : ${seconds}`,\r\n    };\r\n\r\n    textRef.current.value = \"\";\r\n    return setList((list) => [...list, newMassage]);\r\n  };\r\n\r\n  return (\r\n    <section className=\"section section-list\">\r\n      <form className=\"form\">\r\n        <textarea\r\n          ref={textRef}\r\n          className=\"form__input\"\r\n          placeholder=\"Input massage here\"\r\n        ></textarea>\r\n        <button\r\n          className=\"form__btn\"\r\n          type=\"button\"\r\n          onClick={() => clickHandler()}\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n\r\n      <List list={list} />\r\n\r\n      <CSSTransition\r\n        in={!list.length}\r\n        timeout={300}\r\n        classNames=\"list__empty\"\r\n        unmountOnExit\r\n      >\r\n        <p className=\"list__empty\">Empty</p>\r\n      </CSSTransition>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ListSection;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst TimeSection = ({ getTime }) => {\r\n  const [time, setTime] = useState(getTime());\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      return setTime(getTime);\r\n    }, 1000);\r\n  }, [time, getTime]);\r\n\r\n  return (\r\n    <section className=\"section section-time\">\r\n      <span className=\"section-time__time\">{`${time.hours} : ${time.minutes} : ${time.seconds}`}</span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TimeSection;\r\n","import ListSection from \"./components/ListSection\";\nimport TimeSection from \"./components/TimeSection\";\n\nconst App = () => {\n  const getTime = () => {\n    const date = new Date();\n\n    const hours =\n      date.getHours() < 10 ? \"0\" + date.getHours() : date.getHours();\n    const minutes =\n      date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\n    const seconds =\n      date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds();\n\n    return { hours, minutes, seconds };\n  };\n  return (\n    <>\n      <ListSection getTime={getTime} />\n      <TimeSection getTime={getTime} />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}